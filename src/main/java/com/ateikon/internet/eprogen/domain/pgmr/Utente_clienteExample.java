package com.ateikon.internet.eprogen.domain.pgmr;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Utente_clienteExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Utente_clienteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Utente_clienteExample(Utente_clienteExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pgmr.utente_cliente
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTkIsNull() {
            addCriterion("tk is null");
            return this;
        }

        public Criteria andTkIsNotNull() {
            addCriterion("tk is not null");
            return this;
        }

        public Criteria andTkEqualTo(Integer value) {
            addCriterion("tk =", value, "tk");
            return this;
        }

        public Criteria andTkNotEqualTo(Integer value) {
            addCriterion("tk <>", value, "tk");
            return this;
        }

        public Criteria andTkGreaterThan(Integer value) {
            addCriterion("tk >", value, "tk");
            return this;
        }

        public Criteria andTkGreaterThanOrEqualTo(Integer value) {
            addCriterion("tk >=", value, "tk");
            return this;
        }

        public Criteria andTkLessThan(Integer value) {
            addCriterion("tk <", value, "tk");
            return this;
        }

        public Criteria andTkLessThanOrEqualTo(Integer value) {
            addCriterion("tk <=", value, "tk");
            return this;
        }

        public Criteria andTkIn(List<Integer> values) {
            addCriterion("tk in", values, "tk");
            return this;
        }

        public Criteria andTkNotIn(List<Integer> values) {
            addCriterion("tk not in", values, "tk");
            return this;
        }

        public Criteria andTkBetween(Integer value1, Integer value2) {
            addCriterion("tk between", value1, value2, "tk");
            return this;
        }

        public Criteria andTkNotBetween(Integer value1, Integer value2) {
            addCriterion("tk not between", value1, value2, "tk");
            return this;
        }

        public Criteria andTkutenteIsNull() {
            addCriterion("tkutente is null");
            return this;
        }

        public Criteria andTkutenteIsNotNull() {
            addCriterion("tkutente is not null");
            return this;
        }

        public Criteria andTkutenteEqualTo(Integer value) {
            addCriterion("tkutente =", value, "tkutente");
            return this;
        }

        public Criteria andTkutenteNotEqualTo(Integer value) {
            addCriterion("tkutente <>", value, "tkutente");
            return this;
        }

        public Criteria andTkutenteGreaterThan(Integer value) {
            addCriterion("tkutente >", value, "tkutente");
            return this;
        }

        public Criteria andTkutenteGreaterThanOrEqualTo(Integer value) {
            addCriterion("tkutente >=", value, "tkutente");
            return this;
        }

        public Criteria andTkutenteLessThan(Integer value) {
            addCriterion("tkutente <", value, "tkutente");
            return this;
        }

        public Criteria andTkutenteLessThanOrEqualTo(Integer value) {
            addCriterion("tkutente <=", value, "tkutente");
            return this;
        }

        public Criteria andTkutenteIn(List<Integer> values) {
            addCriterion("tkutente in", values, "tkutente");
            return this;
        }

        public Criteria andTkutenteNotIn(List<Integer> values) {
            addCriterion("tkutente not in", values, "tkutente");
            return this;
        }

        public Criteria andTkutenteBetween(Integer value1, Integer value2) {
            addCriterion("tkutente between", value1, value2, "tkutente");
            return this;
        }

        public Criteria andTkutenteNotBetween(Integer value1, Integer value2) {
            addCriterion("tkutente not between", value1, value2, "tkutente");
            return this;
        }

        public Criteria andCdclienteIsNull() {
            addCriterion("cdcliente is null");
            return this;
        }

        public Criteria andCdclienteIsNotNull() {
            addCriterion("cdcliente is not null");
            return this;
        }

        public Criteria andCdclienteEqualTo(String value) {
            addCriterion("cdcliente =", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteNotEqualTo(String value) {
            addCriterion("cdcliente <>", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteGreaterThan(String value) {
            addCriterion("cdcliente >", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteGreaterThanOrEqualTo(String value) {
            addCriterion("cdcliente >=", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteLessThan(String value) {
            addCriterion("cdcliente <", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteLessThanOrEqualTo(String value) {
            addCriterion("cdcliente <=", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteLike(String value) {
            addCriterion("cdcliente like", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteNotLike(String value) {
            addCriterion("cdcliente not like", value, "cdcliente");
            return this;
        }

        public Criteria andCdclienteIn(List<String> values) {
            addCriterion("cdcliente in", values, "cdcliente");
            return this;
        }

        public Criteria andCdclienteNotIn(List<String> values) {
            addCriterion("cdcliente not in", values, "cdcliente");
            return this;
        }

        public Criteria andCdclienteBetween(String value1, String value2) {
            addCriterion("cdcliente between", value1, value2, "cdcliente");
            return this;
        }

        public Criteria andCdclienteNotBetween(String value1, String value2) {
            addCriterion("cdcliente not between", value1, value2, "cdcliente");
            return this;
        }
    }
}