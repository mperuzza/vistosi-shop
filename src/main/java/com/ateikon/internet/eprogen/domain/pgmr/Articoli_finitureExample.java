package com.ateikon.internet.eprogen.domain.pgmr;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Articoli_finitureExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Articoli_finitureExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Articoli_finitureExample(Articoli_finitureExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pgmr.articoli_finiture
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCdarticoloIsNull() {
            addCriterion("cdarticolo is null");
            return this;
        }

        public Criteria andCdarticoloIsNotNull() {
            addCriterion("cdarticolo is not null");
            return this;
        }

        public Criteria andCdarticoloEqualTo(String value) {
            addCriterion("cdarticolo =", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotEqualTo(String value) {
            addCriterion("cdarticolo <>", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloGreaterThan(String value) {
            addCriterion("cdarticolo >", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloGreaterThanOrEqualTo(String value) {
            addCriterion("cdarticolo >=", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloLessThan(String value) {
            addCriterion("cdarticolo <", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloLessThanOrEqualTo(String value) {
            addCriterion("cdarticolo <=", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloLike(String value) {
            addCriterion("cdarticolo like", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotLike(String value) {
            addCriterion("cdarticolo not like", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloIn(List<String> values) {
            addCriterion("cdarticolo in", values, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotIn(List<String> values) {
            addCriterion("cdarticolo not in", values, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloBetween(String value1, String value2) {
            addCriterion("cdarticolo between", value1, value2, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotBetween(String value1, String value2) {
            addCriterion("cdarticolo not between", value1, value2, "cdarticolo");
            return this;
        }

        public Criteria andCdfinitura1IsNull() {
            addCriterion("cdfinitura1 is null");
            return this;
        }

        public Criteria andCdfinitura1IsNotNull() {
            addCriterion("cdfinitura1 is not null");
            return this;
        }

        public Criteria andCdfinitura1EqualTo(String value) {
            addCriterion("cdfinitura1 =", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1NotEqualTo(String value) {
            addCriterion("cdfinitura1 <>", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1GreaterThan(String value) {
            addCriterion("cdfinitura1 >", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1GreaterThanOrEqualTo(String value) {
            addCriterion("cdfinitura1 >=", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1LessThan(String value) {
            addCriterion("cdfinitura1 <", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1LessThanOrEqualTo(String value) {
            addCriterion("cdfinitura1 <=", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1Like(String value) {
            addCriterion("cdfinitura1 like", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1NotLike(String value) {
            addCriterion("cdfinitura1 not like", value, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1In(List<String> values) {
            addCriterion("cdfinitura1 in", values, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1NotIn(List<String> values) {
            addCriterion("cdfinitura1 not in", values, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1Between(String value1, String value2) {
            addCriterion("cdfinitura1 between", value1, value2, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura1NotBetween(String value1, String value2) {
            addCriterion("cdfinitura1 not between", value1, value2, "cdfinitura1");
            return this;
        }

        public Criteria andCdfinitura2IsNull() {
            addCriterion("cdfinitura2 is null");
            return this;
        }

        public Criteria andCdfinitura2IsNotNull() {
            addCriterion("cdfinitura2 is not null");
            return this;
        }

        public Criteria andCdfinitura2EqualTo(String value) {
            addCriterion("cdfinitura2 =", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2NotEqualTo(String value) {
            addCriterion("cdfinitura2 <>", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2GreaterThan(String value) {
            addCriterion("cdfinitura2 >", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2GreaterThanOrEqualTo(String value) {
            addCriterion("cdfinitura2 >=", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2LessThan(String value) {
            addCriterion("cdfinitura2 <", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2LessThanOrEqualTo(String value) {
            addCriterion("cdfinitura2 <=", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2Like(String value) {
            addCriterion("cdfinitura2 like", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2NotLike(String value) {
            addCriterion("cdfinitura2 not like", value, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2In(List<String> values) {
            addCriterion("cdfinitura2 in", values, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2NotIn(List<String> values) {
            addCriterion("cdfinitura2 not in", values, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2Between(String value1, String value2) {
            addCriterion("cdfinitura2 between", value1, value2, "cdfinitura2");
            return this;
        }

        public Criteria andCdfinitura2NotBetween(String value1, String value2) {
            addCriterion("cdfinitura2 not between", value1, value2, "cdfinitura2");
            return this;
        }
    }
}