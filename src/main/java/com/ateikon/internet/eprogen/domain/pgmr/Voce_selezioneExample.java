package com.ateikon.internet.eprogen.domain.pgmr;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Voce_selezioneExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public Voce_selezioneExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    protected Voce_selezioneExample(Voce_selezioneExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pgmr.voce_selezione
     *
     * @ibatorgenerated Mon Feb 23 19:20:40 CET 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCdlinguaIsNull() {
            addCriterion("cdlingua is null");
            return this;
        }

        public Criteria andCdlinguaIsNotNull() {
            addCriterion("cdlingua is not null");
            return this;
        }

        public Criteria andCdlinguaEqualTo(Integer value) {
            addCriterion("cdlingua =", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaNotEqualTo(Integer value) {
            addCriterion("cdlingua <>", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaGreaterThan(Integer value) {
            addCriterion("cdlingua >", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaGreaterThanOrEqualTo(Integer value) {
            addCriterion("cdlingua >=", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaLessThan(Integer value) {
            addCriterion("cdlingua <", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaLessThanOrEqualTo(Integer value) {
            addCriterion("cdlingua <=", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaIn(List<Integer> values) {
            addCriterion("cdlingua in", values, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaNotIn(List<Integer> values) {
            addCriterion("cdlingua not in", values, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaBetween(Integer value1, Integer value2) {
            addCriterion("cdlingua between", value1, value2, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaNotBetween(Integer value1, Integer value2) {
            addCriterion("cdlingua not between", value1, value2, "cdlingua");
            return this;
        }

        public Criteria andCdvoceIsNull() {
            addCriterion("cdvoce is null");
            return this;
        }

        public Criteria andCdvoceIsNotNull() {
            addCriterion("cdvoce is not null");
            return this;
        }

        public Criteria andCdvoceEqualTo(Integer value) {
            addCriterion("cdvoce =", value, "cdvoce");
            return this;
        }

        public Criteria andCdvoceNotEqualTo(Integer value) {
            addCriterion("cdvoce <>", value, "cdvoce");
            return this;
        }

        public Criteria andCdvoceGreaterThan(Integer value) {
            addCriterion("cdvoce >", value, "cdvoce");
            return this;
        }

        public Criteria andCdvoceGreaterThanOrEqualTo(Integer value) {
            addCriterion("cdvoce >=", value, "cdvoce");
            return this;
        }

        public Criteria andCdvoceLessThan(Integer value) {
            addCriterion("cdvoce <", value, "cdvoce");
            return this;
        }

        public Criteria andCdvoceLessThanOrEqualTo(Integer value) {
            addCriterion("cdvoce <=", value, "cdvoce");
            return this;
        }

        public Criteria andCdvoceIn(List<Integer> values) {
            addCriterion("cdvoce in", values, "cdvoce");
            return this;
        }

        public Criteria andCdvoceNotIn(List<Integer> values) {
            addCriterion("cdvoce not in", values, "cdvoce");
            return this;
        }

        public Criteria andCdvoceBetween(Integer value1, Integer value2) {
            addCriterion("cdvoce between", value1, value2, "cdvoce");
            return this;
        }

        public Criteria andCdvoceNotBetween(Integer value1, Integer value2) {
            addCriterion("cdvoce not between", value1, value2, "cdvoce");
            return this;
        }

        public Criteria andDsvoceIsNull() {
            addCriterion("dsvoce is null");
            return this;
        }

        public Criteria andDsvoceIsNotNull() {
            addCriterion("dsvoce is not null");
            return this;
        }

        public Criteria andDsvoceEqualTo(String value) {
            addCriterion("dsvoce =", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceNotEqualTo(String value) {
            addCriterion("dsvoce <>", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceGreaterThan(String value) {
            addCriterion("dsvoce >", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceGreaterThanOrEqualTo(String value) {
            addCriterion("dsvoce >=", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceLessThan(String value) {
            addCriterion("dsvoce <", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceLessThanOrEqualTo(String value) {
            addCriterion("dsvoce <=", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceLike(String value) {
            addCriterion("dsvoce like", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceNotLike(String value) {
            addCriterion("dsvoce not like", value, "dsvoce");
            return this;
        }

        public Criteria andDsvoceIn(List<String> values) {
            addCriterion("dsvoce in", values, "dsvoce");
            return this;
        }

        public Criteria andDsvoceNotIn(List<String> values) {
            addCriterion("dsvoce not in", values, "dsvoce");
            return this;
        }

        public Criteria andDsvoceBetween(String value1, String value2) {
            addCriterion("dsvoce between", value1, value2, "dsvoce");
            return this;
        }

        public Criteria andDsvoceNotBetween(String value1, String value2) {
            addCriterion("dsvoce not between", value1, value2, "dsvoce");
            return this;
        }

        public Criteria andNrposiIsNull() {
            addCriterion("nrposi is null");
            return this;
        }

        public Criteria andNrposiIsNotNull() {
            addCriterion("nrposi is not null");
            return this;
        }

        public Criteria andNrposiEqualTo(Integer value) {
            addCriterion("nrposi =", value, "nrposi");
            return this;
        }

        public Criteria andNrposiNotEqualTo(Integer value) {
            addCriterion("nrposi <>", value, "nrposi");
            return this;
        }

        public Criteria andNrposiGreaterThan(Integer value) {
            addCriterion("nrposi >", value, "nrposi");
            return this;
        }

        public Criteria andNrposiGreaterThanOrEqualTo(Integer value) {
            addCriterion("nrposi >=", value, "nrposi");
            return this;
        }

        public Criteria andNrposiLessThan(Integer value) {
            addCriterion("nrposi <", value, "nrposi");
            return this;
        }

        public Criteria andNrposiLessThanOrEqualTo(Integer value) {
            addCriterion("nrposi <=", value, "nrposi");
            return this;
        }

        public Criteria andNrposiIn(List<Integer> values) {
            addCriterion("nrposi in", values, "nrposi");
            return this;
        }

        public Criteria andNrposiNotIn(List<Integer> values) {
            addCriterion("nrposi not in", values, "nrposi");
            return this;
        }

        public Criteria andNrposiBetween(Integer value1, Integer value2) {
            addCriterion("nrposi between", value1, value2, "nrposi");
            return this;
        }

        public Criteria andNrposiNotBetween(Integer value1, Integer value2) {
            addCriterion("nrposi not between", value1, value2, "nrposi");
            return this;
        }
    }
}