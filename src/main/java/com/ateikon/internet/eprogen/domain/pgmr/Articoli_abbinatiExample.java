package com.ateikon.internet.eprogen.domain.pgmr;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Articoli_abbinatiExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Articoli_abbinatiExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Articoli_abbinatiExample(Articoli_abbinatiExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pgmr.articoli_abbinati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCdarticoloIsNull() {
            addCriterion("cdarticolo is null");
            return this;
        }

        public Criteria andCdarticoloIsNotNull() {
            addCriterion("cdarticolo is not null");
            return this;
        }

        public Criteria andCdarticoloEqualTo(String value) {
            addCriterion("cdarticolo =", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotEqualTo(String value) {
            addCriterion("cdarticolo <>", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloGreaterThan(String value) {
            addCriterion("cdarticolo >", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloGreaterThanOrEqualTo(String value) {
            addCriterion("cdarticolo >=", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloLessThan(String value) {
            addCriterion("cdarticolo <", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloLessThanOrEqualTo(String value) {
            addCriterion("cdarticolo <=", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloLike(String value) {
            addCriterion("cdarticolo like", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotLike(String value) {
            addCriterion("cdarticolo not like", value, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloIn(List<String> values) {
            addCriterion("cdarticolo in", values, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotIn(List<String> values) {
            addCriterion("cdarticolo not in", values, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloBetween(String value1, String value2) {
            addCriterion("cdarticolo between", value1, value2, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloNotBetween(String value1, String value2) {
            addCriterion("cdarticolo not between", value1, value2, "cdarticolo");
            return this;
        }

        public Criteria andCdarticoloabbIsNull() {
            addCriterion("cdarticoloabb is null");
            return this;
        }

        public Criteria andCdarticoloabbIsNotNull() {
            addCriterion("cdarticoloabb is not null");
            return this;
        }

        public Criteria andCdarticoloabbEqualTo(String value) {
            addCriterion("cdarticoloabb =", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbNotEqualTo(String value) {
            addCriterion("cdarticoloabb <>", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbGreaterThan(String value) {
            addCriterion("cdarticoloabb >", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbGreaterThanOrEqualTo(String value) {
            addCriterion("cdarticoloabb >=", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbLessThan(String value) {
            addCriterion("cdarticoloabb <", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbLessThanOrEqualTo(String value) {
            addCriterion("cdarticoloabb <=", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbLike(String value) {
            addCriterion("cdarticoloabb like", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbNotLike(String value) {
            addCriterion("cdarticoloabb not like", value, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbIn(List<String> values) {
            addCriterion("cdarticoloabb in", values, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbNotIn(List<String> values) {
            addCriterion("cdarticoloabb not in", values, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbBetween(String value1, String value2) {
            addCriterion("cdarticoloabb between", value1, value2, "cdarticoloabb");
            return this;
        }

        public Criteria andCdarticoloabbNotBetween(String value1, String value2) {
            addCriterion("cdarticoloabb not between", value1, value2, "cdarticoloabb");
            return this;
        }

        public Criteria andCdlistaabbIsNull() {
            addCriterion("cdlistaabb is null");
            return this;
        }

        public Criteria andCdlistaabbIsNotNull() {
            addCriterion("cdlistaabb is not null");
            return this;
        }

        public Criteria andCdlistaabbEqualTo(Integer value) {
            addCriterion("cdlistaabb =", value, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbNotEqualTo(Integer value) {
            addCriterion("cdlistaabb <>", value, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbGreaterThan(Integer value) {
            addCriterion("cdlistaabb >", value, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbGreaterThanOrEqualTo(Integer value) {
            addCriterion("cdlistaabb >=", value, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbLessThan(Integer value) {
            addCriterion("cdlistaabb <", value, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbLessThanOrEqualTo(Integer value) {
            addCriterion("cdlistaabb <=", value, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbIn(List<Integer> values) {
            addCriterion("cdlistaabb in", values, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbNotIn(List<Integer> values) {
            addCriterion("cdlistaabb not in", values, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbBetween(Integer value1, Integer value2) {
            addCriterion("cdlistaabb between", value1, value2, "cdlistaabb");
            return this;
        }

        public Criteria andCdlistaabbNotBetween(Integer value1, Integer value2) {
            addCriterion("cdlistaabb not between", value1, value2, "cdlistaabb");
            return this;
        }
    }
}