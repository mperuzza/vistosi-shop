package com.ateikon.internet.eprogen.domain.pgmr;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Tipi_allegatiExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Tipi_allegatiExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Tipi_allegatiExample(Tipi_allegatiExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table pgmr.tipi_allegati
     *
     * @ibatorgenerated Mon Feb 23 19:20:39 CET 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andCdlinguaIsNull() {
            addCriterion("cdlingua is null");
            return this;
        }

        public Criteria andCdlinguaIsNotNull() {
            addCriterion("cdlingua is not null");
            return this;
        }

        public Criteria andCdlinguaEqualTo(Integer value) {
            addCriterion("cdlingua =", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaNotEqualTo(Integer value) {
            addCriterion("cdlingua <>", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaGreaterThan(Integer value) {
            addCriterion("cdlingua >", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaGreaterThanOrEqualTo(Integer value) {
            addCriterion("cdlingua >=", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaLessThan(Integer value) {
            addCriterion("cdlingua <", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaLessThanOrEqualTo(Integer value) {
            addCriterion("cdlingua <=", value, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaIn(List<Integer> values) {
            addCriterion("cdlingua in", values, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaNotIn(List<Integer> values) {
            addCriterion("cdlingua not in", values, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaBetween(Integer value1, Integer value2) {
            addCriterion("cdlingua between", value1, value2, "cdlingua");
            return this;
        }

        public Criteria andCdlinguaNotBetween(Integer value1, Integer value2) {
            addCriterion("cdlingua not between", value1, value2, "cdlingua");
            return this;
        }

        public Criteria andCdtipoallegatoIsNull() {
            addCriterion("cdtipoallegato is null");
            return this;
        }

        public Criteria andCdtipoallegatoIsNotNull() {
            addCriterion("cdtipoallegato is not null");
            return this;
        }

        public Criteria andCdtipoallegatoEqualTo(Integer value) {
            addCriterion("cdtipoallegato =", value, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoNotEqualTo(Integer value) {
            addCriterion("cdtipoallegato <>", value, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoGreaterThan(Integer value) {
            addCriterion("cdtipoallegato >", value, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoGreaterThanOrEqualTo(Integer value) {
            addCriterion("cdtipoallegato >=", value, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoLessThan(Integer value) {
            addCriterion("cdtipoallegato <", value, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoLessThanOrEqualTo(Integer value) {
            addCriterion("cdtipoallegato <=", value, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoIn(List<Integer> values) {
            addCriterion("cdtipoallegato in", values, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoNotIn(List<Integer> values) {
            addCriterion("cdtipoallegato not in", values, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoBetween(Integer value1, Integer value2) {
            addCriterion("cdtipoallegato between", value1, value2, "cdtipoallegato");
            return this;
        }

        public Criteria andCdtipoallegatoNotBetween(Integer value1, Integer value2) {
            addCriterion("cdtipoallegato not between", value1, value2, "cdtipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoIsNull() {
            addCriterion("dstipoallegato is null");
            return this;
        }

        public Criteria andDstipoallegatoIsNotNull() {
            addCriterion("dstipoallegato is not null");
            return this;
        }

        public Criteria andDstipoallegatoEqualTo(String value) {
            addCriterion("dstipoallegato =", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoNotEqualTo(String value) {
            addCriterion("dstipoallegato <>", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoGreaterThan(String value) {
            addCriterion("dstipoallegato >", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoGreaterThanOrEqualTo(String value) {
            addCriterion("dstipoallegato >=", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoLessThan(String value) {
            addCriterion("dstipoallegato <", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoLessThanOrEqualTo(String value) {
            addCriterion("dstipoallegato <=", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoLike(String value) {
            addCriterion("dstipoallegato like", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoNotLike(String value) {
            addCriterion("dstipoallegato not like", value, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoIn(List<String> values) {
            addCriterion("dstipoallegato in", values, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoNotIn(List<String> values) {
            addCriterion("dstipoallegato not in", values, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoBetween(String value1, String value2) {
            addCriterion("dstipoallegato between", value1, value2, "dstipoallegato");
            return this;
        }

        public Criteria andDstipoallegatoNotBetween(String value1, String value2) {
            addCriterion("dstipoallegato not between", value1, value2, "dstipoallegato");
            return this;
        }

        public Criteria andCartellaIsNull() {
            addCriterion("cartella is null");
            return this;
        }

        public Criteria andCartellaIsNotNull() {
            addCriterion("cartella is not null");
            return this;
        }

        public Criteria andCartellaEqualTo(String value) {
            addCriterion("cartella =", value, "cartella");
            return this;
        }

        public Criteria andCartellaNotEqualTo(String value) {
            addCriterion("cartella <>", value, "cartella");
            return this;
        }

        public Criteria andCartellaGreaterThan(String value) {
            addCriterion("cartella >", value, "cartella");
            return this;
        }

        public Criteria andCartellaGreaterThanOrEqualTo(String value) {
            addCriterion("cartella >=", value, "cartella");
            return this;
        }

        public Criteria andCartellaLessThan(String value) {
            addCriterion("cartella <", value, "cartella");
            return this;
        }

        public Criteria andCartellaLessThanOrEqualTo(String value) {
            addCriterion("cartella <=", value, "cartella");
            return this;
        }

        public Criteria andCartellaLike(String value) {
            addCriterion("cartella like", value, "cartella");
            return this;
        }

        public Criteria andCartellaNotLike(String value) {
            addCriterion("cartella not like", value, "cartella");
            return this;
        }

        public Criteria andCartellaIn(List<String> values) {
            addCriterion("cartella in", values, "cartella");
            return this;
        }

        public Criteria andCartellaNotIn(List<String> values) {
            addCriterion("cartella not in", values, "cartella");
            return this;
        }

        public Criteria andCartellaBetween(String value1, String value2) {
            addCriterion("cartella between", value1, value2, "cartella");
            return this;
        }

        public Criteria andCartellaNotBetween(String value1, String value2) {
            addCriterion("cartella not between", value1, value2, "cartella");
            return this;
        }

        public Criteria andPrefissoIsNull() {
            addCriterion("prefisso is null");
            return this;
        }

        public Criteria andPrefissoIsNotNull() {
            addCriterion("prefisso is not null");
            return this;
        }

        public Criteria andPrefissoEqualTo(String value) {
            addCriterion("prefisso =", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoNotEqualTo(String value) {
            addCriterion("prefisso <>", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoGreaterThan(String value) {
            addCriterion("prefisso >", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoGreaterThanOrEqualTo(String value) {
            addCriterion("prefisso >=", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoLessThan(String value) {
            addCriterion("prefisso <", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoLessThanOrEqualTo(String value) {
            addCriterion("prefisso <=", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoLike(String value) {
            addCriterion("prefisso like", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoNotLike(String value) {
            addCriterion("prefisso not like", value, "prefisso");
            return this;
        }

        public Criteria andPrefissoIn(List<String> values) {
            addCriterion("prefisso in", values, "prefisso");
            return this;
        }

        public Criteria andPrefissoNotIn(List<String> values) {
            addCriterion("prefisso not in", values, "prefisso");
            return this;
        }

        public Criteria andPrefissoBetween(String value1, String value2) {
            addCriterion("prefisso between", value1, value2, "prefisso");
            return this;
        }

        public Criteria andPrefissoNotBetween(String value1, String value2) {
            addCriterion("prefisso not between", value1, value2, "prefisso");
            return this;
        }

        public Criteria andExtIsNull() {
            addCriterion("ext is null");
            return this;
        }

        public Criteria andExtIsNotNull() {
            addCriterion("ext is not null");
            return this;
        }

        public Criteria andExtEqualTo(String value) {
            addCriterion("ext =", value, "ext");
            return this;
        }

        public Criteria andExtNotEqualTo(String value) {
            addCriterion("ext <>", value, "ext");
            return this;
        }

        public Criteria andExtGreaterThan(String value) {
            addCriterion("ext >", value, "ext");
            return this;
        }

        public Criteria andExtGreaterThanOrEqualTo(String value) {
            addCriterion("ext >=", value, "ext");
            return this;
        }

        public Criteria andExtLessThan(String value) {
            addCriterion("ext <", value, "ext");
            return this;
        }

        public Criteria andExtLessThanOrEqualTo(String value) {
            addCriterion("ext <=", value, "ext");
            return this;
        }

        public Criteria andExtLike(String value) {
            addCriterion("ext like", value, "ext");
            return this;
        }

        public Criteria andExtNotLike(String value) {
            addCriterion("ext not like", value, "ext");
            return this;
        }

        public Criteria andExtIn(List<String> values) {
            addCriterion("ext in", values, "ext");
            return this;
        }

        public Criteria andExtNotIn(List<String> values) {
            addCriterion("ext not in", values, "ext");
            return this;
        }

        public Criteria andExtBetween(String value1, String value2) {
            addCriterion("ext between", value1, value2, "ext");
            return this;
        }

        public Criteria andExtNotBetween(String value1, String value2) {
            addCriterion("ext not between", value1, value2, "ext");
            return this;
        }
    }
}