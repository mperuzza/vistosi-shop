package com.ateikon.internet.eprogen.dao.pgmr;

import com.ateikon.internet.eprogen.dao.ibatis.SqlMapBaseDao;
import com.ateikon.internet.eprogen.domain.pgmr.Archclie;
import com.ateikon.internet.eprogen.domain.pgmr.ArchclieExample;
import com.ateikon.internet.eprogen.domain.pgmr.ArchclieKey;
import java.util.List;
import java.util.Map;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class ArchclieDAOImpl extends SqlMapBaseDao implements ArchclieDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public ArchclieDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int countByExample(ArchclieExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("pgmr_archclie.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int deleteByExample(ArchclieExample example) {
        int rows = getSqlMapClientTemplate().delete("pgmr_archclie.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int deleteByPrimaryKey(ArchclieKey key) {
        int rows = getSqlMapClientTemplate().delete("pgmr_archclie.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public void insert(Archclie record) {
        getSqlMapClientTemplate().insert("pgmr_archclie.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public void insertSelective(Archclie record) {
        getSqlMapClientTemplate().insert("pgmr_archclie.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    @SuppressWarnings("unchecked")
    public List<Archclie> selectByExample(ArchclieExample example) {
        List<Archclie> list = getSqlMapClientTemplate().queryForList("pgmr_archclie.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public Archclie selectByPrimaryKey(ArchclieKey key) {
        Archclie record = (Archclie) getSqlMapClientTemplate().queryForObject("pgmr_archclie.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int updateByExampleSelective(Archclie record, ArchclieExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pgmr_archclie.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int updateByExample(Archclie record, ArchclieExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pgmr_archclie.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int updateByPrimaryKeySelective(Archclie record) {
        int rows = getSqlMapClientTemplate().update("pgmr_archclie.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    public int updateByPrimaryKey(Archclie record) {
        int rows = getSqlMapClientTemplate().update("pgmr_archclie.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table pgmr.archclie
     *
     * @ibatorgenerated Mon Jul 27 09:43:37 CEST 2009
     */
    private static class UpdateByExampleParms extends ArchclieExample {
        private Object record;

        public UpdateByExampleParms(Object record, ArchclieExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    public int countCliePag(Map pars) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("pgmr_archclie.countFind", pars);
        return count;
    }

    public List selectCliePag(Map pars, String orderByClause, int pageNumber, int pagesize) {
        
        pars.put("orderByClause", orderByClause);
        List list = getSqlMapClientTemplate().queryForList("pgmr_archclie.findByPars", pars, (pageNumber-1)*pagesize, pagesize);

        return list;
    }

    public List findResellers(Map pars) {

        if(!pars.containsKey("cdazie")) pars.put("cdazie", getProfil().getCdazie());
        List list = getSqlMapClientTemplate().queryForList("pgmr_archclie.findResellers", pars);

        return list;
}

    public List findResellersByUniloc(Map pars) {

        if(!pars.containsKey("cdazie")) pars.put("cdazie", getProfil().getCdazie());
        List list = getSqlMapClientTemplate().queryForList("pgmr_archclie.findResellersByUnilRev", pars);

        return list;
    }



}