package com.ateikon.internet.eprogen.dao.pgmr;

import com.ateikon.internet.eprogen.domain.pgmr.Lis_listino;
import com.ateikon.internet.eprogen.domain.pgmr.Lis_listinoExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class Lis_listinoDAOImpl extends SqlMapClientDaoSupport implements Lis_listinoDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public Lis_listinoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int countByExample(Lis_listinoExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("pgmr_lis_listino.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int deleteByExample(Lis_listinoExample example) {
        int rows = getSqlMapClientTemplate().delete("pgmr_lis_listino.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int deleteByPrimaryKey(String cdlist) {
        Lis_listino key = new Lis_listino();
        key.setCdlist(cdlist);
        int rows = getSqlMapClientTemplate().delete("pgmr_lis_listino.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public void insert(Lis_listino record) {
        getSqlMapClientTemplate().insert("pgmr_lis_listino.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public void insertSelective(Lis_listino record) {
        getSqlMapClientTemplate().insert("pgmr_lis_listino.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    @SuppressWarnings("unchecked")
    public List<Lis_listino> selectByExample(Lis_listinoExample example) {
        List<Lis_listino> list = getSqlMapClientTemplate().queryForList("pgmr_lis_listino.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public Lis_listino selectByPrimaryKey(String cdlist) {
        Lis_listino key = new Lis_listino();
        key.setCdlist(cdlist);
        Lis_listino record = (Lis_listino) getSqlMapClientTemplate().queryForObject("pgmr_lis_listino.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int updateByExampleSelective(Lis_listino record, Lis_listinoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pgmr_lis_listino.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int updateByExample(Lis_listino record, Lis_listinoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pgmr_lis_listino.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int updateByPrimaryKeySelective(Lis_listino record) {
        int rows = getSqlMapClientTemplate().update("pgmr_lis_listino.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    public int updateByPrimaryKey(Lis_listino record) {
        int rows = getSqlMapClientTemplate().update("pgmr_lis_listino.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table pgmr.lis_listino
     *
     * @ibatorgenerated Mon Jul 27 10:54:02 CEST 2009
     */
    private static class UpdateByExampleParms extends Lis_listinoExample {
        private Object record;

        public UpdateByExampleParms(Object record, Lis_listinoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}