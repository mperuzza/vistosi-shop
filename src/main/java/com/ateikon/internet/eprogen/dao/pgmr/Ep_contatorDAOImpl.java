package com.ateikon.internet.eprogen.dao.pgmr;

import com.ateikon.internet.eprogen.dao.ibatis.SqlMapBaseDao;
import com.ateikon.internet.eprogen.domain.pgmr.Ep_contator;
import com.ateikon.internet.eprogen.domain.pgmr.Ep_contatorExample;
import com.ateikon.internet.eprogen.domain.pgmr.Ep_contatorKey;
import java.util.List;
import org.springframework.dao.DataAccessException;
import org.springframework.dao.DataRetrievalFailureException;

public class Ep_contatorDAOImpl extends SqlMapBaseDao implements Ep_contatorDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public Ep_contatorDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int countByExample(Ep_contatorExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("pgmr_ep_contator.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int deleteByExample(Ep_contatorExample example) {
        int rows = getSqlMapClientTemplate().delete("pgmr_ep_contator.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int deleteByPrimaryKey(Ep_contatorKey key) {
        int rows = getSqlMapClientTemplate().delete("pgmr_ep_contator.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public void insert(Ep_contator record) {
        getSqlMapClientTemplate().insert("pgmr_ep_contator.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public void insertSelective(Ep_contator record) {
        getSqlMapClientTemplate().insert("pgmr_ep_contator.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    @SuppressWarnings("unchecked")
    public List<Ep_contator> selectByExample(Ep_contatorExample example) {
        List<Ep_contator> list = getSqlMapClientTemplate().queryForList("pgmr_ep_contator.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public Ep_contator selectByPrimaryKey(Ep_contatorKey key) {
        Ep_contator record = (Ep_contator) getSqlMapClientTemplate().queryForObject("pgmr_ep_contator.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int updateByExampleSelective(Ep_contator record, Ep_contatorExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pgmr_ep_contator.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int updateByExample(Ep_contator record, Ep_contatorExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("pgmr_ep_contator.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int updateByPrimaryKeySelective(Ep_contator record) {
        int rows = getSqlMapClientTemplate().update("pgmr_ep_contator.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    public int updateByPrimaryKey(Ep_contator record) {
        int rows = getSqlMapClientTemplate().update("pgmr_ep_contator.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table pgmr.ep_contator
     *
     * @ibatorgenerated Mon Dec 13 18:01:25 CET 2010
     */
    private static class UpdateByExampleParms extends Ep_contatorExample {
        private Object record;

        public UpdateByExampleParms(Object record, Ep_contatorExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }


    public Long getNprogr (String cdazie, String prname, String annoco ) throws DataAccessException {

        Long nprogr = 0l;

        Ep_contatorKey k = new Ep_contatorKey();

        k.setCdazie(cdazie);
        k.setPrname(prname);
        k.setAnnoco(annoco);

        Ep_contator contator = selectByPrimaryKey(k);

        if(contator!=null){

            contator.setNprogr(contator.getNprogr()+1);

            int tot_rec = updateByPrimaryKey(contator);

            if (tot_rec == 1){
                nprogr = contator.getNprogr();
            }else {
                throw new DataRetrievalFailureException("Error: UPD ep_contator");
            }



        }else {

            nprogr = 10l;

            Ep_contator newContator = new Ep_contator();

            newContator.setCdazie(cdazie);
            newContator.setPrname(prname);
            newContator.setAnnoco(annoco);
            newContator.setNprogr(nprogr);

            insert(contator);

        }


        return nprogr ;

    }

}