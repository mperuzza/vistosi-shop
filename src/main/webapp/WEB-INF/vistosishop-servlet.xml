<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

<!--beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-2.5.xsd"-->

	<!--
		- This bean resolves specific types of exceptions to corresponding logical
		- view names for error views. The default behaviour of DispatcherServlet
		- is to propagate all exceptions to the servlet container: this will happen
		- here with all other types of exceptions.
	-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".lang.Exception">uncaughtException</prop>
			</props>
		</property>
	</bean>

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	-->
        <context:component-scan base-package="com.ateikon.internet.eprogen.web.spring"/>

	<!--context:component-scan base-package="com.ateikon.internet.eprogen.web.spring" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
	</context:component-scan-->

    <!-- Activates @Autowired for Controllers -->
    <!--context:annotation-config/-->

    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename"><value>WEB-INF/classes/messages</value></property>
        <property name="cacheSeconds" value="3"/>
    </bean>
       
    <bean id="localeChangeInterceptor"
          class="com.ateikon.internet.eprogen.web.interceptor.AtkLocaleChangeInterceptor">
        <property name="paramName" value="lang"/>
    </bean>     
    
    <bean id="geoIPInterceptor"
          class="com.ateikon.internet.eprogen.web.interceptor.GeoIPInterceptor"/>
    
    <bean id="localeResolver"
      class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="it"/>  
    </bean>
      
    <!--org.springframework.context.support.ResourceBundleMessageSource-->

	<!--
		- This bean configures the 'prefix' and 'suffix' properties of
		- InternalResourceViewResolver, which resolves logical view names
		- returned by Controllers. For example, a logical view name of "vets"
		- will be mapped to "/WEB-INF/jsp/vets.jsp".
	-->

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml"/>
                <entry key="html" value="text/html"/>
                <entry key="do" value="text/html"/>
                <entry key="jsp" value="text/html"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
                    <property name="location" value="/WEB-INF/views.xml"/>
                </bean>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="requestContextAttribute" value="rc"/>
                    <property name="prefix" value="/WEB-INF/jsp/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
            </list>
        </property>

    </bean>

    <bean id="articolo" class="com.ateikon.internet.eprogen.web.xmlview.ArticoloXML"/>

    



    <!--bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/-->
    
    <!--bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1"/>
        <property name="location" value="/WEB-INF/views.xml"/>
    </bean-->
    
    
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="1000000"/>
    </bean>    
    
    <!--bean id="defaultHandlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/-->    

    <!-- Interceptors --> 
    <!--bean id="signonInterceptor" class="com.ateikon.internet.eprogen.web.spring.SignonInterceptor">
        <property name="eprogenManager"><ref bean="eprogenManager"/></property>
    </bean>  
    <bean id="signOnInterceptor"
          class="com.ateikon.internet.eprogen.web.interceptor.SignOnInterceptor">
    </bean-->
    <bean id="ajaxInterceptor" class="com.ateikon.internet.eprogen.web.interceptor.AjaxInterceptor"/>

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="geoIPInterceptor"/>
                <ref bean="localeChangeInterceptor"/>
                <!--ref bean="signOnInterceptor"/-->
                <!--ref bean="ajaxInterceptor"/-->
                
            </list>
        </property>        
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="synchronizeOnSession" value="true"/>
    </bean>
    
       
 </beans>
